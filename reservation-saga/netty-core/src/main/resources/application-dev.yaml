spring.application.name: rsaga.netty-core

spring:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 1000         # 한 번에 배치로 삽입할 엔티티 수
        order_inserts: true       # INSERT 문을 배치로 실행하도록 설정
        order_updates: true       # UPDATE 문을 배치로 실행하도록 설정
        generate_statistics: false # 배치 실행되는지 확인 통계값

logging:
  level:
    org.springframework.transaction: WARN
    org.springframework.orm.jpa.JpaTransactionManager: WARN
    io.confluent.kafka.serializers.protobuf:
      KafkaProtobufSerializerConfig: WARN
      KafkaProtobufDeserializerConfig: WARN
    org.apache.kafka.clients.admin.AdminClientConfig: WARN
    org.apache.kafka.clients.producer.ProducerConfig: WARN
    org.apache.kafka.clients.consumer.ConsumerConfig: WARN
#    org.springframework.jdbc.datasource.DataSourceTransactionManager: DEBUG

kafka:
  bootstrap-servers: "192.168.35.5:9092,192.168.35.5:9093,192.168.35.5:9094"
  schema-registry-url: "http://192.168.35.5:8081"

# mysql
mysql:
  master:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.35.179:3306/reservation-saga
    username: master
    password: master
    maximumPoolSize: 100
    minimumIdle: 24
  slaves:
    - driverClassName: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://192.168.35.179:3406/reservation-saga
      username: slave
      password: slave
      maximumPoolSize: 20
      minimumIdle: 10